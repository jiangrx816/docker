input {
    jdbc {
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-j-8.0.31.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://mysql:3306/logstash?&serverTimezone=GMT&useSSL=false&logLevel=SLF4J"
        jdbc_user => "root"
        jdbc_password => "123456"
        schedule => "* * * * *"
        statement => 'SELECT 
  rc_journals.id AS rc_journal_id,
  rc_journals.main_language,
  rc_journals.pic,
  rc_journals.pub_cycle,
  rc_journals.pub_year,
  rc_journals.area,
  rc_journals.print_issn,
  rc_journals.electronic_issn,
  rc_journals.cn,
  rc_journals.url,
  rc_journals.submit_method,
  rc_journals.submit_email,
  rc_journals.submit_url,
  rc_journals.chief_editor,
  rc_journals.dispatch_area_cn,
  rc_journals.dispatch_area_en,
  rc_journals.dispatch_subject_cn,
  rc_journals.dispatch_subject_en,
  rc_journals.institutions,
  rc_journals.status,
  rc_journals.publish_time,
  rc_journals.article_last_publish_time,
  -- 对 rc_journal_contents 的所有字段使用聚合函数
  MAX(rc_journal_contents.name_cn) AS name_cn,
  MAX(rc_journal_contents.name_en) AS name_en,
  MAX(rc_journal_contents.intro_cn) AS intro_cn,
  MAX(rc_journal_contents.intro_en) AS intro_en,
  MAX(rc_journal_contents.supervisor_cn) AS supervisor_cn,
  MAX(rc_journal_contents.supervisor_en) AS supervisor_en,
  MAX(rc_journal_contents.sponsor_cn) AS sponsor_cn,
  MAX(rc_journal_contents.sponsor_en) AS sponsor_en,
  MAX(rc_journal_contents.oa_start_time) AS oa_start_time,
  MAX(rc_journal_contents.oa_status) AS oa_status,
  MAX(rc_journal_contents.oa_policy_url) AS oa_policy_url,
  MAX(rc_journal_contents.apc_status) AS apc_status,
  MAX(rc_journal_contents.apc_status_url) AS apc_status_url,
  MAX(rc_journal_contents.apc_charge_description_cn) AS apc_charge_description_cn,
  MAX(rc_journal_contents.apc_charge_description_en) AS apc_charge_description_en,
  MAX(rc_journal_contents.apc_relief_policy_cn) AS apc_relief_policy_cn,
  MAX(rc_journal_contents.apc_relief_policy_en) AS apc_relief_policy_en,
  MAX(rc_journal_contents.oa_cc_by) AS oa_cc_by,
  MAX(rc_journal_contents.oa_cc_by_url) AS oa_cc_by_url,
  MAX(rc_journal_contents.author_copyright) AS author_copyright,
  MAX(rc_journal_contents.author_copyright_url) AS author_copyright_url,
  MAX(rc_journal_contents.publisher_cn) AS publisher_cn,
  MAX(rc_journal_contents.publisher_en) AS publisher_en,
  MAX(rc_journal_contents.oa_cc_bys) AS oa_cc_bys,
  -- JSON_ARRAYAGG 已经是聚合函数，无需修改
  JSON_ARRAYAGG(
    JSON_OBJECT(
      "website", website_journals.website_id,
      "status", website_journals.status,
      "website_journal_id", website_journals.id
    )
  ) AS website_status
FROM rc_journals
LEFT JOIN rc_journal_contents 
  ON rc_journals.id = rc_journal_contents.rc_journal_id
LEFT JOIN website_journals 
  ON rc_journals.id = website_journals.rc_journal_id
WHERE 
  rc_journals.update_time >= UNIX_TIMESTAMP(STR_TO_DATE(:sql_last_value, "%Y-%m-%d %H:%i:%s"))
  OR rc_journal_contents.update_time >= UNIX_TIMESTAMP(STR_TO_DATE(:sql_last_value, "%Y-%m-%d %H:%i:%s"))
  OR website_journals.update_time >= UNIX_TIMESTAMP(STR_TO_DATE(:sql_last_value, "%Y-%m-%d %H:%i:%s"))
GROUP BY rc_journals.id'
    }
}

filter {
    json {
        source => "website_status"
        target => "website_status"
    }
    json {
        source => "oa_cc_bys"
        target => "oa_cc_bys"
    }
}

output {
    elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        action => "index"
        index => "jp.journal.alias"
        document_id => "jp-journal-%{rc_journal_id}"
    }
}